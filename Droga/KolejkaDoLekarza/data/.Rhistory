setwd("c:/_Przemek_/Dysk Google/__SmarterPoland__/_NoweTematy_/                       polowanie na wykresy")
dane <- scan()
2006 2984 33 45 -12 -13
dane <- scan()
dim(dane) = c(6,10)
dim(dane) = c(6,10)
dane <- t(dane)
colnames(dane) = c("rok", "l.mieszkancow","urodzen","zgonow","bilans.demograficzny","bilans.migracji")
barplot(dane[,3], las=1)
plot(1, xlim=c(1996.5,2006.5),ylim=c(-55,55),las=1,xlab="rok",ylab="bilans osobowy",bty="n")
legend("topright",c("Urodzen","Zgonow","Migracje"),fill=c("pink3","gold3","blue3"), bty="n", ncol=3,cex=1.2)
rect(dane[,1]-0.3, 0, dane[,1], dane[,3], col="pink3", border="pink3")
rect(dane[,1]+0.05, dane[,3], dane[,1]+0.35, dane[,3]-dane[,4], col="gold3", border="gold3")
rect(dane[,1]+0.05, dane[,3]-dane[,4], dane[,1]+0.35, dane[,3]-dane[,4]+dane[,6], col="blue3", border="blue3")
abline(h=seq(-60,60,10),lty="28",col="#77777733",lwd=1)
abline(h=0,lwd=1)
axis(1,1997:2006)
axis(2,seq(-50,50,10),las=1)
plot(1, xlim=c(1996.5,2006.5),ylim=c(-55,55),las=1,xlab="rok",ylab="bilans osobowy",bty="n")
legend("topright",c("Urodzen","Zgonow","Migracje"),fill=c("pink3","gold3","blue3"), bty="n", ncol=3,cex=1.2)
rect(dane[,1]-0.3, 0, dane[,1], dane[,3], col="pink3", border="pink3")
rect(dane[,1]+0.05, dane[,3], dane[,1]+0.35, dane[,3]-dane[,4], col="gold3", border="gold3")
rect(dane[,1]+0.05, dane[,3]-dane[,4], dane[,1]+0.35, dane[,3]-dane[,4]+dane[,6], col="blue3", border="blue3")
abline(h=seq(-60,60,10),lty="28",col="#77777733",lwd=1)
abline(h=0,lwd=1)
axis(1,1997:2006)
axis(2,seq(-50,50,10),las=1)
library(PISA2003lite)
library(PISA2006lite)
students <- student2006
plot(1, xlim=c(1996.5,2006.5),ylim=c(-55,55),las=1,xlab="rok",ylab="bilans osobowy",bty="n")
legend("topright",c("Urodzen","Zgonow","Migracje"),fill=c("pink3","gold3","blue3"), bty="n", ncol=3,cex=1.2)
rect(dane[,1]-0.3, 0, dane[,1], dane[,3], col="pink3", border="pink3")
rect(dane[,1]+0.05, dane[,3], dane[,1]+0.35, dane[,3]-dane[,4], col="gold3", border="gold3")
rect(dane[,1]+0.05, dane[,3]-dane[,4], dane[,1]+0.35, dane[,3]-dane[,4]+dane[,6], col="blue3", border="blue3")
abline(h=seq(-60,60,10),lty="28",col="#77777733",lwd=1)
abline(h=0,lwd=1)
axis(1,1997:2006)
axis(2,seq(-50,50,10),las=1)
legend("topright",c("Urodzen","Zgonow","Migracje"),fill=c("pink3","gold3","blue3"), bty="n", ncol=3,cex=1.2)
library(knitr)
boxplot(Petal.Length~Species, data = iris)
library(psych))
library(psych)
?geometric.mean
?harmonic.mean
library(vioplot)
install.package("vioplot")
install.packages("vioplot")
library(vioplot)
vioplot
?vioplot
example(vioplot)
?car
library(car)
?sp
library(car)
sp(cisnienie.skurczowe, cisnienie.rozkurczowe, groups=plec, smooth=F,
lwd=3, pch=c(20,21), cex=1.5)
daneSoc=read.csv("http://www.biecek.pl/R/dane/daneSoc.csv",sep=";")
attach(daneSoc)
library(car)
sp(cisnienie.skurczowe, cisnienie.rozkurczowe, groups=plec, smooth=F,
lwd=3, pch=c(20,21), cex=1.5)
install.packages("YaleToolkit")
YaleToolkit::gpairs
library(YaleToolkit)
gpairs
library(gplots)
install.packages("gplots")
library(gplots)
baloonplot
library("gplots")
baloonplot
balloonplot
install.packages("MCMCpack")
install.packages("VGAM")
library("VGAM")
library("MCMCpack")
prayleigh
pweibull
2 < 3 + 1
2 < (3 + 1)
library(mapdata)
install.packages("mapdata")
library(maps)
?map
map()
map()
?map
install.packages("mapdata")
install.packages("mapdata")
install.packages("mapdata")
worldMapEnv
data(worldMapEnv)
worldMapEnv
library(mapdata)
?mapdata
mapdata:::.onLoad
map()
map()
?map
map('world','poland')
map('world','europe')
?map
worldMapEnv
ls()
map('world', fill = TRUE, col = 1:10)
map('world', fill = TRUE, col = 1:12)
map('world', c('poland','germany'))
map('world', c('poland','germany','korea'))
map('world', c('poland','germany','japan'))
map('world', c('poland','germany','japan','south korea'))
map('world', c('poland','germany','japan','south korea','usa'))
map('world', c('poland','germany','japan','south korea','usa'), col=1:3)
map('world', c('poland','germany','japan','south korea','usa'), col=1:3,fill=T)
map('worldHiresMapEnv')
map('worldHires')
map('worldHires','poland')
map('world','poland')
map('worldHires','poland')
map('world','poland')
library(rworldmap)
data(countryExData)
countryExData
str(countryExData)
data(countryExData)
sPDF <- joinCountryData2Map( countryExData
,joinCode = "ISO3"
,nameJoinColumn = "ISO3V10")
mapDevice() #create world map shaped window
mapCountryData(sPDF
,nameColumnToPlot='BIODIVERSITY')
LETTERS["Y"]
sum(LETTERS== "Y")
which(LETTERS== "Y")
which(LETTERS== "E")
which(LETTERS== "S")
library("devtools")
install_github("bgmm","pbiecek")
library(bgmm)
load("c:/Users/Przemyslaw/Downloads/tr.RData")
load("c:/Users/Przemyslaw/Downloads/t.RData")
load("c:/Users/Przemyslaw/Downloads/l.RData")
load("c:/Users/Przemyslaw/Downloads/t.RData")
v
modelSemiSupervised = semisupervised( X = t, knowns = tr, class = l )
res = predict( modelSemiSupervised, t )
str(res)
a <- 1:4
(a[2] <- 3)
sample(2, 1:96, replacement=TRUE)
sample(2, 1:96, replace==TRUE)
sample(2, 1:96, replace=TRUE)
sample(2, 1:6, replace=TRUE)
?sample(2, 1:6, replace=TRUE)
sample(1:6, 2, replace=TRUE)
sample(1:6, 2, replace=TRUE)
sample(1:6, 2, replace=FALSE)
sample(1:6, 2, replace=FALSE)
sample(1:6, 2, replace=FALSE)
sample(1:6, 2, replace=FALSE)
sample(1:6, 2, replace=FALSE)
sample(1:6, 5, replace=FALSE)
sample(1:6, 5, replace=FALSE)
sample(1:6, 5, replace=FALSE)
sample(1:6, 5, replace=FALSE)
sample(1:6, 5, replace=TRUE)
set.seed(1313); sample(1:96, 2, replace=FALSE)
set.seed(1313); sample(1:96, 2, replace=FALSE)
set.seed(1313); sample(1:96, 2, replace=FALSE) - 11 - 12
set.seed(1313); sample(1:96, 2, replace=FALSE) - 11 - 12 - 10
set.seed(1313); sample(1:96, 2, replace=FALSE) - 11 - 12 - 10 - 9 - 7
set.seed(1313); sample(1:96, 2, replace=FALSE) - 11 - 12 - 10 - 9 - 7 - 29
set.seed(1313); sample(1:96, 4, replace=FALSE)
set.seed(1313); sample(1:96, 4, replace=FALSE)- 11 - 12 - 10
set.seed(1313); sample(1:96, 4, replace=FALSE)- 11 - 12 - 10 - 9
set.seed(1313); sample(1:96, 4, replace=FALSE)- 11 - 12 - 10 - 9 - 7
set.seed(1313); sample(1:96, 4, replace=FALSE)
par(mar=c(0,0,0,0))
plot(c(-2,2),c(-0.2,2),type="n",xlab="",ylab="",bty="n",xaxt="n",yaxt="n")
#arrows(-3,0,3,0,lwd=3,angle=15, length=0.5)
arrows(-1.5,-0.2,-1.5,2,lwd=3,angle=15, length=0.5)
curve(1-x^6,-1.2,1.2,add=T,lwd=3,col="grey90")
curve(1-x^4,-1.2,1.2,add=T,lwd=3,col="grey50")
curve(1-abs(x^3),-1.2,1.2,add=T,lwd=3,col="grey30")
curve(1-x^2,-1.2,1.2,add=T,lwd=3,col="grey20")
curve(1-abs(x),-1.2,1.2,add=T,lwd=3,col="grey10")
curve(cos(30*x)/20, -0.75, -0.3,add=T, lwd=3,col="red")
curve(cos(30*x)/20, 0.75, 0.3,add=T, lwd=3,col="red")
axis(2,line=-5.3,at=seq(0,1.6,0.02),labels=F,tcl=-0.3)
axis(2,line=-5.3,at=seq(0,1.6,0.1),labels=F,tcl=-0.5)
axis(2,line=-5.3,at=seq(0.2,1.6,0.2),labels=T,tcl=-0.8,las=2,cex.axis=0.8)
text(0.55,0.35,expression(y==1-abs(x)),srt=-60, col="grey10")
text(0.63,0.47,expression(y==1-x^2),srt=-67, col="grey20")
text(0.9,0.55,expression(y==1-x^6),srt=-80, col="grey50")
w1 = rbeta(30,2,2) -0.5
w2 = rbeta(30,2,2) -0.5
w1 = rnorm(40,0,0.2)
w2 = rnorm(40,0,0.2)
x = w1 - 0.1
y = w1/3+w2/2 + 0.4
points(x,y, pch=19, cex=0.7)
data.ellipse(x,y,add=T,plot.points=F,levels=c(0.4,0.85), center.cex=0)
par(mar=c(0,0,0,0))
plot(c(-2,2),c(-0.2,2),type="n",xlab="",ylab="",bty="n",xaxt="n",yaxt="n")
#arrows(-1.5,-0.2,-1.5,2,lwd=3,angle=15, length=0.5)
arrows(-1.5,0,-1.5,2,lwd=3,angle=15, length=0.5)
axis(2,line=-5.3,at=seq(0,1.6,0.02),labels=F,tcl=-0.3)
axis(2,line=-5.3,at=seq(0,1.6,0.1),labels=F,tcl=-0.5)
axis(2,line=-5.3,at=seq(0.2,1.6,0.2),labels=T,tcl=-0.8,las=2,cex.axis=0.8)
xx = seq(-1.2,1.2,0.01)
lines(xx + (1 - xx^2)/25 - 1/50, 1-xx^6      ,lwd=3,col="grey90")
lines(xx + (1 - xx^2)/25 - 1/50, 1-xx^4      ,lwd=3,col="grey50")
lines(xx + (1 - xx^2)/25 - 1/50, 1-abs(xx^3) ,lwd=3,col="grey30")
lines(xx + (1 - xx^2)/25 - 1/50, 1-xx^2      ,lwd=3,col="grey20")
lines(xx + (1 - xx^2)/25 - 1/50, 1-abs(xx)   ,lwd=3,col="grey10")
curve(cos(30*x)/20, -0.75, -0.3,add=T, lwd=3,col="red")
curve(cos(30*x)/20, 0.75, 0.3,add=T, lwd=3,col="red")
text(0.55,0.35,expression(y==1-abs(x)),srt=-60, col="grey10")
text(0.63 - 0.01,0.47,expression(y==1-x^2),srt=-67, col="grey20")
text(0.9  - 0.02, 0.55,expression(y==1-x^6),srt=-80, col="grey50")
xt = x-z/25
points(xt,y, pch=19, cex=0.7)
#data.ellipse(x,y,add=T,plot.points=F,levels=c(0.4,0.85), center.cex=0)
w1 = rbeta(30,2,2) -0.5
w2 = rbeta(30,2,2) -0.5
w1 = rnorm(40,0,0.2)
w2 = rnorm(40,0,0.2)
w3 = rnorm(40,0,0.2)
x = w1 - 0.1
y = w1/3+w2/2 + 0.4
z = w3/ (1 + x^2 + y^2)
x = w1 - 0.01
y = w2/2 + 0.4
z = 0.5 -w3/ (1 + w1^2 + w2^2)
par(mar=c(0,0,0,0))
plot(c(-2,2),c(-0.2,2),type="n",xlab="",ylab="",bty="n",xaxt="n",yaxt="n")
xx = seq(-1.2,1.2,0.01)
lines(xx - (1 - xx^2)/25 + 1/50, 1-xx^6      ,lwd=3,col="grey90")
lines(xx - (1 - xx^2)/25 + 1/50, 1-xx^4      ,lwd=3,col="grey50")
lines(xx - (1 - xx^2)/25 + 1/50, 1-abs(xx^3) ,lwd=3,col="grey30")
lines(xx - (1 - xx^2)/25 + 1/50, 1-xx^2      ,lwd=3,col="grey20")
lines(xx - (1 - xx^2)/25 + 1/50, 1-abs(xx)   ,lwd=3,col="grey10")
curve(cos(30*x)/20, -0.75, -0.3,add=T, lwd=3,col="red")
curve(cos(30*x)/20, 0.75, 0.3,add=T, lwd=3,col="red")
text(0.55,0.35,expression(y==1-abs(x)),srt=-60, col="grey10")
text(0.63 + 0.01,0.47,expression(y==1-x^2),srt=-67, col="grey20")
text(0.9  + 0.02, 0.55,expression(y==1-x^6),srt=-80, col="grey50")
xt = x+z/25
points(xt,y, pch=19, cex=0.7)
#data.ellipse(x,y,add=T,plot.points=F,levels=c(0.4,0.85), center.cex=0)
dev.off()
library(devtools)
install_github("PISA2012lite", "pbiecek")
library(PISA2012lite)
library("devtools")
install_github("PISA2012lite", "pbiecek")
1100*35
rpoiss(100)
rpois(100)
rpois(1,100)
rpois(1,100)
ppois(100,100)
ppois(100,150)
ppois(10,15)
cpois(100,150)
ppois(10,5)
data(Titanic)
dim(Titanic)
dimnames(Titanic)
apply(Titanic, 1, sum)
prop.table(apply(Titanic, 1, sum))
prop.table(apply(Titanic, 1:2, sum))
prop.table(apply(Titanic, 1:3, sum))
Titanic[,1,1,]
Titanic[,1,1:2,]
Titanic[,1:2,1,]
apply(Titanic[,1:2,1,], c(1,3), sum)
t1 <- apply(Titanic[,1:2,1,], c(1,3), sum)
Titanic[,,2,]
mosaicplot(Titanic[,,2,])
?cbind
dim(Titanic[,,2,])
aa <- array(0, c(4, 3, 2))
aa[,1:2,] <- Titanic[,,2,]
aa
aa[,3,] <- t1
dim(aa)
rownames(aa) <- row.names(Titanic)
aa
colnames(aa) = c(colnames(Titanic), "Kids")
aa
mosaicplot(aa)
mosaicplot(aa,dir=c("v","v","v"))
mosaicplot(aa,dir=c("v","h","v"))
mosaicplot(aa,dir=c("v","h","v"), col=c("green3","red3"))
mosaicplot(aa,dir=c("v","h","v"), col=c("red3","green3"))
mosaicplot(aa,dir=c("v","h","v"), col=c("red3","green3"), off=c(0,0))
mosaicplot(aa,dir=c("v","h","v"), col=c("red3","green3"), off=c(1,1))
mosaicplot(aa,dir=c("v","h","v"), col=c("red3","green3"), off=c(2),2))
mosaicplot(aa,dir=c("v","h","v"), col=c("red3","green3"), off=c(3,3))
mosaicplot(aa,dir=c("v","h","v"), col=c("red3","green3"), off=c(4,3))
dimnames(aa)
dimnames(aa)[[3]]
dimnames(aa)[[3]]= c("surv", "dead")
dimnames(aa)[[3]]
mosaicplot(aa,dir=c("v","h","v"), col=c("red3","green3"), off=c(4,3))
dimnames(aa)[[3]]= rev(c("surv", "dead"))
mosaicplot(aa,dir=c("v","h","v"), col=c("red3","green3"), off=c(4,3))
mosaicplot(aa,dir=c("v","h","v"), col=c("red3","green3"), off=c(4,3),main="")
mosaicplot(aa,dir=c("v","h","v"), col=c("grey90","grey3"), off=c(4,3),main="")
mosaicplot(aa,dir=c("v","h","v"), col=c("grey9","grey90"), off=c(4,3),main="")
mosaicplot(aa,dir=c("v","h","v"), col=c("grey50","grey90"), off=c(4,3),main="")
setwd("c:/_Przemek_/Dropbox/_Ksiazki_/_jakPokazywacDane_/eseje/warsztat")
png("mosaicplot3.jpg",700,700)
mosaicplot(aa,dir=c("v","h","v"), col=c("grey50","grey90"), off=c(4,3),main="")
dev.off()
png("mosaicplot3.jpg",600,400)
mosaicplot(aa,dir=c("v","h","v"), col=c("grey50","grey90"), off=c(4,3),main="")
dev.off()
png("mosaicplot3.jpg",500,400)
mosaicplot(aa,dir=c("v","h","v"), col=c("grey50","grey90"), off=c(4,3),main="")
dev.off()
16*12
setwd("c:/_Przemek_/GitHub/Eseje/Droga/KolejkaDoLekarza/data/")
library(RODBC)
library("kknn")
library("lattice")
library(rworldmap)
library(maptools)
library(gpclib)
library(maptools)
library(RColorBrewer)
library(classInt)
gpclibPermit()
library(rgeos)
require(maptools)
file.name <- "07_AOS_30062013.xls"
file.names <- list.files(pattern="xls")
wojewodztwa <- c("Dolnoslaskie", "Kujawsko-Pomorskie", "Lubelskie", "Lubuskie", "Lodzkie", "Malopolskie", "Mazowieckie", "Opolskie", "Podkarpackie", "Podlaskie", "Pomorskie", "Slaskie", "Swietokrzyskie", "Warminsko - Mazurskie", "Wielkopolskie", "Zachodniopomorskie")
dats <- list()
for (file.name in file.names) {
excel.connect <- odbcConnectExcel(file.name)
dats[[file.name]] <- sqlFetch(excel.connect, "Zestawienie")
dats[[file.name]] <- data.frame(dats[[file.name]], woj=file.name)
odbcClose(excel.connect)
}
wszystkieDane <- do.call(rbind, dats)
load("wszystkieDane.rda")
load("wspolrzedne.rda")
load("miastawoj.rda")
load("pary.rda")
load("tocheck.rda")
df <- data.frame(sapply(wspolrzedne, `[`, 1),
sapply(wspolrzedne, `[`, 2),
sapply(pary, `[`, 1),
sapply(pary, `[`, 2))
colnames(df) <- c("szerokosc", "dlugosc", "miasto", "wojewodztwo")
rownames(df) <- tocheck
plot(df[,2], df[,1], pch=19, cex=0.2)
grupa <- "PORADNIA ALERGOLOGICZNA"
load("wybraneDane.rda")
load("wybraneMiasta.rda")
load("wybraneMiastawoj.rda")
adres <- as.character(wybraneDane[,5])
wybraneWspolrzedne <- df[wybraneMiastawoj,]
plot(wybraneWspolrzedne[,2], wybraneWspolrzedne[,1], pch=19, cex=0.2)
wybraneDane[,c(6,8)]
newproj <- "+proj=utm +zone=55 +south +ellps=GRS80 +units=m"
newproj <- "+ellps=GRS80"
shape0 <- readShapeSpatial("/Users/pbiecek/camtasia/Dropbox/__SmarterPoland__/_Mapy_/POL_adm0", proj4string = CRS(newproj))
shape1 <- readShapeSpatial("/Users/pbiecek/camtasia/Dropbox/__SmarterPoland__/_Mapy_/POL_adm1", proj4string = CRS(newproj),repair=TRUE,force_ring=T,verbose=TRUE)
# siatka punktow
x = seq(14,24.5,0.02)
y = seq(49,55,0.02)
grid <- expand.grid(dlugosc = x, szerokosc=y)
par(mar=c(0,0,0,0))
najblizszyLekarzOdleglosc <- apply(grid[,2:1], 1, function(x) {
min(sqrt((lekarz[,1] - x[1])^2*2 + (lekarz[,2] - x[2])^2), na.rm=TRUE)
})
srednieCzasyLista <- list(x = x, y = y)
najblizszyLekarzOdlegloscMatrix <- matrix(najblizszyLekarzOdleglosc, length(srednieCzasyLista$x), length(srednieCzasyLista$y))
x = seq(14,24.5,0.02)
y = seq(49,55,0.02)
grid <- expand.grid(dlugosc = x, szerokosc=y)
par(mar=c(0,0,0,0))
rownames(wybraneWspolrzedne) = NULL
wybraneDF <- data.frame(y=wybraneDane[,8], wybraneWspolrzedne[,2:1])
srednieCzasy <- kknn(y~., wybraneDF, grid, k=5)
srednieCzasyLista <- list(x = x, y = y, z = matrix(srednieCzasy$fitted.values, length(x), length(y)))
tx = readWKT("POLYGON ((12.9 48.9, 12.9 55.1, 25.1 55.1, 25.1 48.9, 12.9 48.9))")
d = gDifference(tx,shape0)
lv <- seq(0,max(srednieCzasy$fitted.values) + 1,length.out=101)
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, srednieCzasyLista$z, col = rev(heat.colors(length(lv) - 1)), levels=lv)
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
points(wybraneDF[,2] + rnorm(nrow(wybraneDF))/30, wybraneDF[,3] + rnorm(nrow(wybraneDF))/30, pch='x', cex=0.5)
summary(srednieCzasyLista$z)
summary(as.vector(srednieCzasyLista$z))
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, srednieCzasyLista$z, col = rev(heat.colors(length(lv) - 1)), levels=lv)
filled.contour2 <- function (x = seq(0, 1, length.out = nrow(z)), y = seq(0, 1,
length.out = ncol(z)), z, xlim = range(x, finite = TRUE),
ylim = range(y, finite = TRUE), zlim = range(z, finite = TRUE),
levels = pretty(zlim, nlevels), nlevels = 20, color.palette = cm.colors,
col = color.palette(length(levels) - 1), plot.title, plot.axes,
key.title, key.axes, asp = NA, xaxs = "i", yaxs = "i", las = 1,
axes = TRUE, frame.plot = axes, ...)
{
plot.new()
plot.window(xlim, ylim, "", xaxs = xaxs, yaxs = yaxs, asp = asp)
.filled.contour(x, y, z, levels, col)
if (frame.plot)
box()
invisible()
}
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, srednieCzasyLista$z, col = rev(heat.colors(length(lv) - 1)), levels=lv)
dev.off()
dev.off()
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, srednieCzasyLista$z, col = rev(heat.colors(length(lv) - 1)), levels=lv)
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
points(wybraneDF[,2] + rnorm(nrow(wybraneDF))/30, wybraneDF[,3] + rnorm(nrow(wybraneDF))/30, pch='x', cex=0.5)
lv
barplot(rep(1,length(lev)), col=rev(heat.colors(length(lv) - 1)))
barplot(rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)))
barplot(rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)), border=NA)
barplot(rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)), border=NA, width=2)
barplot(rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)), border= rev(heat.colors(length(lv) - 1)))
barplot(rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)), border= rev(heat.colors(length(lv) - 1)), yaxt="n")
axis(1)
axis(1, seq_along(lv), lv)
barplot(rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)), border= rev(heat.colors(length(lv) - 1)), yaxt="n")
axis(1, seq_along(lv), lv)
barplot(rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)), border= rev(heat.colors(length(lv) - 1)), yaxt="n")
axis(1, seq_along(lv)*1.2, lv)
226/30
summary(v)
summary(seq_along(lv)*1.2)
121/7.5
barplot(rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)), border= rev(heat.colors(length(lv) - 1)), yaxt="n")
axis(1, (0:7)*16, paste(0:7,"m"))
barplot(rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)), border= rev(heat.colors(length(lv) - 1)), yaxt="n")
axis(1, (0:7)*16, paste(0:7,"msc."))
pdf("skalaKol.pdf", 10, 4)
barplot(rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)), border= rev(heat.colors(length(lv) - 1)), yaxt="n")
axis(1, (0:7)*16, paste(0:7,"msc."))
dev.off()
plot(1:length(lv), rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)), yaxt="n")
plot(1:length(lv), rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)), pch=15, yaxt="n")
plot(1:length(lv), rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)), pch=15, yaxt="n", cex=3)
plot(1:length(lv), rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)), pch=15, yaxt="n", cex=3, bty="n")
plot(1:length(lv), rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)), pch=15, yaxt="n", cex=3, bty="n", xlab="",ylab="")
plot(1:length(lv), rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)), pch=15, yaxt="n", cex=3, bty="n", xlab="",ylab="", xaxt="n")
axis(1, (0:7)*16, paste(0:7,"msc."))
length(lv)/7.5
plot(1:length(lv), rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)), pch=15, yaxt="n", cex=3, bty="n", xlab="",ylab="", xaxt="n")
axis(1, (0:7)*13.4, paste(0:7,"msc."))
pdf("skalaKol.pdf", 10, 4)
plot(1:length(lv), rep(1,length(lv)), col=rev(heat.colors(length(lv) - 1)), pch=15, yaxt="n", cex=3, bty="n", xlab="",ylab="", xaxt="n")
axis(1, (0:7)*13.5, paste(0:7,"msc."))
dev.off()
polskieMiasta <- world.cities[world.cities$country.etc == 'Poland',]
lekarz <- wybraneWspolrzedne[wybraneDane[,8] < 14,]
najblizszyLekarz <- t(apply(polskieMiasta[,c(4,5)], 1, function(x) {
ind <- which.min((lekarz[,1] - x[1])^2*2 + (lekarz[,2] - x[2])^2)
c(lekarz[ind,1], lekarz[ind,2])
}))
polskieMiasta <- world.cities[world.cities$country.etc == 'Poland',]
library(maps)
polskieMiasta <- world.cities[world.cities$country.etc == 'Poland',]
maps:::world.cities
data(world.cities)
polskieMiasta <- world.cities[world.cities$country.etc == 'Poland',]
lekarz <- wybraneWspolrzedne[wybraneDane[,8] < 14,]
najblizszyLekarz <- t(apply(polskieMiasta[,c(4,5)], 1, function(x) {
ind <- which.min((lekarz[,1] - x[1])^2*2 + (lekarz[,2] - x[2])^2)
c(lekarz[ind,1], lekarz[ind,2])
}))
par(mar=c(0,0,0,0))
plot(polskieMiasta[,5], polskieMiasta[,4], pch=19, cex=(polskieMiasta[,3]/200000)^0.5, col="#ff0000",
xaxt="n", yaxt="n", bty="n", xlab="", ylab="", type="n")
for (i in 1:nrow(polskieMiasta)) {
lines(c(polskieMiasta[i,5], najblizszyLekarz[i,2]),
c(polskieMiasta[i,4], najblizszyLekarz[i,1]),
col="#000000bb", lwd=1)
}
points(polskieMiasta[,5], polskieMiasta[,4], pch=19, cex=(polskieMiasta[,3]/100000)^0.5, col="#ff0000aa")
points(najblizszyLekarz[,2], najblizszyLekarz[,1], pch='x', cex=0.8)
plot(shape1, border="#55555522", lwd=1, add=T)
plot(shape0, border="#55555522", lwd=1, add=T)
najblizszyLekarzOdleglosc <- apply(grid[,2:1], 1, function(x) {
min(sqrt((lekarz[,1] - x[1])^2*2 + (lekarz[,2] - x[2])^2), na.rm=TRUE)
})
srednieCzasyLista <- list(x = x, y = y)
najblizszyLekarzOdlegloscMatrix <- matrix(najblizszyLekarzOdleglosc, length(srednieCzasyLista$x), length(srednieCzasyLista$y))
lv <- seq(0,2 ,length.out=101)
wybraneDF2 <- wybraneDF[wybraneDane[,8] < 14,]
par(mar=c(0,0,0,0))
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, najblizszyLekarzOdlegloscMatrix, col = rev(heat.colors(length(lv) - 1)), levels=lv)
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
points(wybraneDF[,2] + rnorm(nrow(wybraneDF))/30, wybraneDF[,3] + rnorm(nrow(wybraneDF))/30, pch='x', cex=0.7, col="#77777777")
points(wybraneDF2[,2] + rnorm(nrow(wybraneDF2))/30, wybraneDF2[,3] + rnorm(nrow(wybraneDF2))/30, pch='x', cex=0.7, col="black")
lv
