pdf("mapaOdleglosciKolory.pdf",12,11)
par(mar=c(0,0,0,0))
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, najblizszyLekarzOdlegloscMatrix,  frame.plot = FALSE, plot.axes={
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
points(wybraneDF[,2] + rnorm(nrow(wybraneDF))/30, wybraneDF[,3] + rnorm(nrow(wybraneDF))/30, pch='x', cex=0.7, col="#77777777")
points(wybraneDF2[,2] + rnorm(nrow(wybraneDF2))/30, wybraneDF2[,3] + rnorm(nrow(wybraneDF2))/30, pch='x', cex=0.7, col="black")
}, col = rev(heat.colors(length(lv) - 1)), levels=lv)
#title(main=grupa)
dev.off()
newproj <- "+proj=utm +zone=55 +south +ellps=GRS80 +units=m"
newproj <- "+ellps=GRS80"
shape0 <- readShapeSpatial("/Users/pbiecek/camtasia/Dropbox/__SmarterPoland__/_Mapy_/POL_adm0", proj4string = CRS(newproj))
shape1 <- readShapeSpatial("/Users/pbiecek/camtasia/Dropbox/__SmarterPoland__/_Mapy_/POL_adm1", proj4string = CRS(newproj),repair=TRUE,force_ring=T,verbose=TRUE)
# siatka punktow
x = seq(14,24.5,0.02)
y = seq(49,55,0.02)
grid <- expand.grid(dlugosc = x, szerokosc=y)
pdf("mapaSredniCzas.pdf",12,11)
par(mar=c(0,0,0,0))
rownames(wybraneWspolrzedne) = NULL
wybraneDF <- data.frame(y=wybraneDane[,8], wybraneWspolrzedne[,2:1])
srednieCzasy <- kknn(y~., wybraneDF, grid, k=5)
srednieCzasyLista <- list(x = x, y = y, z = matrix(srednieCzasy$fitted.values, length(x), length(y)))
tx = readWKT("POLYGON ((12.9 48.9, 12.9 55.1, 25.1 55.1, 25.1 48.9, 12.9 48.9))")
d = gDifference(tx,shape0)
lv <- seq(0,max(srednieCzasy$fitted.values) + 1,length.out=101)
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, srednieCzasyLista$z,  frame.plot = FALSE, plot.axes={
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
points(wybraneDF[,2] + rnorm(nrow(wybraneDF))/30, wybraneDF[,3] + rnorm(nrow(wybraneDF))/30, pch=10, cex=0.2)
}, col = rev(heat.colors(length(lv) - 1)), levels=lv)
#title(main=grupa)
dev.off()
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, srednieCzasyLista$z,  frame.plot = FALSE, plot.axes={
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
points(wybraneDF[,2] + rnorm(nrow(wybraneDF))/30, wybraneDF[,3] + rnorm(nrow(wybraneDF))/30, pch=10, cex=0.2)
}, col = rev(heat.colors(length(lv) - 1)), levels=lv)
dev.off()
dev.off()
dev.off()
dev.off()
pdf("mapaSredniCzas.pdf",12,11)
par(mar=c(0,0,0,0))
rownames(wybraneWspolrzedne) = NULL
wybraneDF <- data.frame(y=wybraneDane[,8], wybraneWspolrzedne[,2:1])
srednieCzasy <- kknn(y~., wybraneDF, grid, k=5)
srednieCzasyLista <- list(x = x, y = y, z = matrix(srednieCzasy$fitted.values, length(x), length(y)))
tx = readWKT("POLYGON ((12.9 48.9, 12.9 55.1, 25.1 55.1, 25.1 48.9, 12.9 48.9))")
d = gDifference(tx,shape0)
lv <- seq(0,max(srednieCzasy$fitted.values) + 1,length.out=101)
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, srednieCzasyLista$z,  frame.plot = FALSE, plot.axes={
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
points(wybraneDF[,2] + rnorm(nrow(wybraneDF))/30, wybraneDF[,3] + rnorm(nrow(wybraneDF))/30, pch=10, cex=0.2)
}, col = rev(heat.colors(length(lv) - 1)), levels=lv)
#title(main=grupa)
dev.off()
par(mar=c(0,0,0,0))
rownames(wybraneWspolrzedne) = NULL
wybraneDF <- data.frame(y=wybraneDane[,8], wybraneWspolrzedne[,2:1])
srednieCzasy <- kknn(y~., wybraneDF, grid, k=5)
srednieCzasyLista <- list(x = x, y = y, z = matrix(srednieCzasy$fitted.values, length(x), length(y)))
tx = readWKT("POLYGON ((12.9 48.9, 12.9 55.1, 25.1 55.1, 25.1 48.9, 12.9 48.9))")
d = gDifference(tx,shape0)
lv <- seq(0,max(srednieCzasy$fitted.values) + 1,length.out=101)
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, srednieCzasyLista$z,  frame.plot = FALSE, plot.axes={
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
points(wybraneDF[,2] + rnorm(nrow(wybraneDF))/30, wybraneDF[,3] + rnorm(nrow(wybraneDF))/30, pch=10, cex=0.2)
}, col = rev(heat.colors(length(lv) - 1)), levels=lv)
traceback()
filled.contour2 <- function (x = seq(0, 1, length.out = nrow(z)), y = seq(0, 1,
length.out = ncol(z)), z, xlim = range(x, finite = TRUE),
ylim = range(y, finite = TRUE), zlim = range(z, finite = TRUE),
levels = pretty(zlim, nlevels), nlevels = 20, color.palette = cm.colors,
col = color.palette(length(levels) - 1), plot.title, plot.axes,
key.title, key.axes, asp = NA, xaxs = "i", yaxs = "i", las = 1,
axes = TRUE, frame.plot = axes, ...)
{
mar.orig <- (par.orig <- par(c("mar", "las", "mfrow")))$mar
on.exit(par(par.orig))
box()
mar <- mar.orig
mar[4L] <- 1
par(mar = mar)
plot.new()
plot.window(xlim, ylim, "", xaxs = xaxs, yaxs = yaxs, asp = asp)
.filled.contour(x, y, z, levels, col)
if (frame.plot)
box()
invisible()
}
# siatka punktow
x = seq(14,24.5,0.02)
y = seq(49,55,0.02)
grid <- expand.grid(dlugosc = x, szerokosc=y)
pdf("mapaSredniCzas.pdf",12,11)
par(mar=c(0,0,0,0))
rownames(wybraneWspolrzedne) = NULL
wybraneDF <- data.frame(y=wybraneDane[,8], wybraneWspolrzedne[,2:1])
srednieCzasy <- kknn(y~., wybraneDF, grid, k=5)
srednieCzasyLista <- list(x = x, y = y, z = matrix(srednieCzasy$fitted.values, length(x), length(y)))
tx = readWKT("POLYGON ((12.9 48.9, 12.9 55.1, 25.1 55.1, 25.1 48.9, 12.9 48.9))")
d = gDifference(tx,shape0)
lv <- seq(0,max(srednieCzasy$fitted.values) + 1,length.out=101)
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, srednieCzasyLista$z,  frame.plot = FALSE, plot.axes={
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
points(wybraneDF[,2] + rnorm(nrow(wybraneDF))/30, wybraneDF[,3] + rnorm(nrow(wybraneDF))/30, pch=10, cex=0.2)
}, col = rev(heat.colors(length(lv) - 1)), levels=lv)
#title(main=grupa)
dev.off()
filled.contour2 <- function (x = seq(0, 1, length.out = nrow(z)), y = seq(0, 1,
length.out = ncol(z)), z, xlim = range(x, finite = TRUE),
ylim = range(y, finite = TRUE), zlim = range(z, finite = TRUE),
levels = pretty(zlim, nlevels), nlevels = 20, color.palette = cm.colors,
col = color.palette(length(levels) - 1), plot.title, plot.axes,
key.title, key.axes, asp = NA, xaxs = "i", yaxs = "i", las = 1,
axes = TRUE, frame.plot = axes, ...)
{
plot.new()
plot.window(xlim, ylim, "", xaxs = xaxs, yaxs = yaxs, asp = asp)
.filled.contour(x, y, z, levels, col)
if (frame.plot)
box()
invisible()
}
newproj <- "+proj=utm +zone=55 +south +ellps=GRS80 +units=m"
newproj <- "+ellps=GRS80"
shape0 <- readShapeSpatial("/Users/pbiecek/camtasia/Dropbox/__SmarterPoland__/_Mapy_/POL_adm0", proj4string = CRS(newproj))
shape1 <- readShapeSpatial("/Users/pbiecek/camtasia/Dropbox/__SmarterPoland__/_Mapy_/POL_adm1", proj4string = CRS(newproj),repair=TRUE,force_ring=T,verbose=TRUE)
# siatka punktow
x = seq(14,24.5,0.02)
y = seq(49,55,0.02)
grid <- expand.grid(dlugosc = x, szerokosc=y)
pdf("mapaSredniCzas.pdf",12,11)
par(mar=c(0,0,0,0))
rownames(wybraneWspolrzedne) = NULL
wybraneDF <- data.frame(y=wybraneDane[,8], wybraneWspolrzedne[,2:1])
srednieCzasy <- kknn(y~., wybraneDF, grid, k=5)
srednieCzasyLista <- list(x = x, y = y, z = matrix(srednieCzasy$fitted.values, length(x), length(y)))
tx = readWKT("POLYGON ((12.9 48.9, 12.9 55.1, 25.1 55.1, 25.1 48.9, 12.9 48.9))")
d = gDifference(tx,shape0)
lv <- seq(0,max(srednieCzasy$fitted.values) + 1,length.out=101)
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, srednieCzasyLista$z,  frame.plot = FALSE, plot.axes={
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
points(wybraneDF[,2] + rnorm(nrow(wybraneDF))/30, wybraneDF[,3] + rnorm(nrow(wybraneDF))/30, pch=10, cex=0.2)
}, col = rev(heat.colors(length(lv) - 1)), levels=lv)
dev.off()
pdf("mapaSredniPunkty.pdf",12,11)
par(mar=c(0,0,0,0))
x = seq(14,24.5,0.15)
y = seq(49,55,0.1)
grid <- expand.grid(dlugosc = x, szerokosc=y)
srednieCzasy <- kknn(y~., wybraneDF, grid, k=5)
srednieCzasyLista <- list(x = x, y = y, z = matrix(srednieCzasy$fitted.values, length(x), length(y)))
plot(grid[,1], grid[,2], pch=19, cex=as.vector(srednieCzasyLista$z)/100, xaxt="n", yaxt="n", bty="n", xlab="", ylab="")
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
dev.off()
pdf("mapaSredniCzas.pdf",12,11)
par(mar=c(0,0,0,0))
rownames(wybraneWspolrzedne) = NULL
wybraneDF <- data.frame(y=wybraneDane[,8], wybraneWspolrzedne[,2:1])
srednieCzasy <- kknn(y~., wybraneDF, grid, k=5)
srednieCzasyLista <- list(x = x, y = y, z = matrix(srednieCzasy$fitted.values, length(x), length(y)))
tx = readWKT("POLYGON ((12.9 48.9, 12.9 55.1, 25.1 55.1, 25.1 48.9, 12.9 48.9))")
d = gDifference(tx,shape0)
lv <- seq(0,max(srednieCzasy$fitted.values) + 1,length.out=101)
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, srednieCzasyLista$z, col = rev(heat.colors(length(lv) - 1)), levels=lv)
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
points(wybraneDF[,2] + rnorm(nrow(wybraneDF))/30, wybraneDF[,3] + rnorm(nrow(wybraneDF))/30, pch=10, cex=0.2)
dev.off()
pdf("mapaSredniCzas.pdf",12,11)
par(mar=c(0,0,0,0))
rownames(wybraneWspolrzedne) = NULL
wybraneDF <- data.frame(y=wybraneDane[,8], wybraneWspolrzedne[,2:1])
srednieCzasy <- kknn(y~., wybraneDF, grid, k=5)
srednieCzasyLista <- list(x = x, y = y, z = matrix(srednieCzasy$fitted.values, length(x), length(y)))
tx = readWKT("POLYGON ((12.9 48.9, 12.9 55.1, 25.1 55.1, 25.1 48.9, 12.9 48.9))")
d = gDifference(tx,shape0)
lv <- seq(0,max(srednieCzasy$fitted.values) + 1,length.out=101)
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, srednieCzasyLista$z, col = rev(heat.colors(length(lv) - 1)), levels=lv)
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
points(wybraneDF[,2] + rnorm(nrow(wybraneDF))/30, wybraneDF[,3] + rnorm(nrow(wybraneDF))/30, pch='x', cex=0.5)
dev.off()
pdf("mapaSredniCzas.pdf",12,11)
par(mar=c(0,0,0,0))
rownames(wybraneWspolrzedne) = NULL
wybraneDF <- data.frame(y=wybraneDane[,8], wybraneWspolrzedne[,2:1])
srednieCzasy <- kknn(y~., wybraneDF, grid, k=5)
srednieCzasyLista <- list(x = x, y = y, z = matrix(srednieCzasy$fitted.values, length(x), length(y)))
tx = readWKT("POLYGON ((12.9 48.9, 12.9 55.1, 25.1 55.1, 25.1 48.9, 12.9 48.9))")
d = gDifference(tx,shape0)
lv <- seq(0,max(srednieCzasy$fitted.values) + 1,length.out=101)
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, srednieCzasyLista$z, col = rev(heat.colors(length(lv) - 1)), levels=lv)
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
points(wybraneDF[,2] + rnorm(nrow(wybraneDF))/30, wybraneDF[,3] + rnorm(nrow(wybraneDF))/30, pch='x', cex=0.7)
dev.off()
pdf("mapaSredniCzas.pdf",12,11)
par(mar=c(0,0,0,0))
rownames(wybraneWspolrzedne) = NULL
wybraneDF <- data.frame(y=wybraneDane[,8], wybraneWspolrzedne[,2:1])
srednieCzasy <- kknn(y~., wybraneDF, grid, k=5)
srednieCzasyLista <- list(x = x, y = y, z = matrix(srednieCzasy$fitted.values, length(x), length(y)))
tx = readWKT("POLYGON ((12.9 48.9, 12.9 55.1, 25.1 55.1, 25.1 48.9, 12.9 48.9))")
d = gDifference(tx,shape0)
lv <- seq(0,max(srednieCzasy$fitted.values) + 1,length.out=101)
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, srednieCzasyLista$z, col = rev(heat.colors(length(lv) - 1)), levels=lv)
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
points(wybraneDF[,2] + rnorm(nrow(wybraneDF))/30, wybraneDF[,3] + rnorm(nrow(wybraneDF))/30, pch='x', cex=0.5)
dev.off()
pdf("mapaOdleglosci.pdf",12,11)
par(mar=c(0,0,0,0))
plot(polskieMiasta[,5], polskieMiasta[,4], pch=19, cex=(polskieMiasta[,3]/200000)^0.5, col="#ff0000",
xaxt="n", yaxt="n", bty="n", xlab="", ylab="", type="n")
for (i in 1:nrow(polskieMiasta)) {
lines(c(polskieMiasta[i,5], najblizszyLekarz[i,2]),
c(polskieMiasta[i,4], najblizszyLekarz[i,1]),
col="#000000bb", lwd=1)
}
points(polskieMiasta[,5], polskieMiasta[,4], pch=19, cex=(polskieMiasta[,3]/100000)^0.5, col="#ff0000aa")
points(najblizszyLekarz[,2], najblizszyLekarz[,1], pch='x', cex=0.8)
plot(shape1, border="#55555522", lwd=1, add=T)
plot(shape0, border="#55555522", lwd=1, add=T)
dev.off()
polskieMiasta <- world.cities[world.cities$country.etc == 'Poland',]
lekarz <- wybraneWspolrzedne[wybraneDane[,8] < 14,]
najblizszyLekarz <- t(apply(polskieMiasta[,c(4,5)], 1, function(x) {
ind <- which.min((lekarz[,1] - x[1])^2*2 + (lekarz[,2] - x[2])^2)
c(lekarz[ind,1], lekarz[ind,2])
}))
pdf("mapaOdleglosci.pdf",12,11)
par(mar=c(0,0,0,0))
plot(polskieMiasta[,5], polskieMiasta[,4], pch=19, cex=(polskieMiasta[,3]/200000)^0.5, col="#ff0000",
xaxt="n", yaxt="n", bty="n", xlab="", ylab="", type="n")
for (i in 1:nrow(polskieMiasta)) {
lines(c(polskieMiasta[i,5], najblizszyLekarz[i,2]),
c(polskieMiasta[i,4], najblizszyLekarz[i,1]),
col="#000000bb", lwd=1)
}
points(polskieMiasta[,5], polskieMiasta[,4], pch=19, cex=(polskieMiasta[,3]/100000)^0.5, col="#ff0000aa")
points(najblizszyLekarz[,2], najblizszyLekarz[,1], pch='x', cex=0.8)
plot(shape1, border="#55555522", lwd=1, add=T)
plot(shape0, border="#55555522", lwd=1, add=T)
dev.off()
x = seq(14,24.5,0.1)
y = seq(49,55,0.1)
grid <- expand.grid(dlugosc = x, szerokosc=y)
lekarz <- wybraneWspolrzedne[wybraneDane[,8] < 14,]
najblizszyLekarz <- t(apply(grid[,2:1], 1, function(x) {
ind <- which.min((lekarz[,1] - x[1])^2*2 + (lekarz[,2] - x[2])^2)
c(lekarz[ind,1], lekarz[ind,2])
}))
pdf("mapaOdleglosciSiatka.pdf",12,11)
par(mar=c(0,0,0,0))
plot(grid[,1], grid[,2], pch=19, cex=0.1, col="#ff000055",
xaxt="n", yaxt="n", bty="n", xlab="", ylab="")
for (i in 1:nrow(grid)) {
lines(c(grid[i,1], najblizszyLekarz[i,2]),
c(grid[i,2], najblizszyLekarz[i,1]),
col="#00000055")
}
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
dev.off()
najblizszyLekarzOdleglosc <- apply(grid[,2:1], 1, function(x) {
min(sqrt((lekarz[,1] - x[1])^2*2 + (lekarz[,2] - x[2])^2), na.rm=TRUE)
})
srednieCzasyLista <- list(x = x, y = y)
najblizszyLekarzOdlegloscMatrix <- matrix(najblizszyLekarzOdleglosc, length(srednieCzasyLista$x), length(srednieCzasyLista$y))
lv <- seq(0,2 ,length.out=101)
wybraneDF2 <- wybraneDF[wybraneDane[,8] < 14,]
pdf("mapaOdleglosciKolory.pdf",12,11)
par(mar=c(0,0,0,0))
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, najblizszyLekarzOdlegloscMatrix,  frame.plot = FALSE, plot.axes={
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
points(wybraneDF[,2] + rnorm(nrow(wybraneDF))/30, wybraneDF[,3] + rnorm(nrow(wybraneDF))/30, pch='x', cex=0.7, col="#77777777")
points(wybraneDF2[,2] + rnorm(nrow(wybraneDF2))/30, wybraneDF2[,3] + rnorm(nrow(wybraneDF2))/30, pch='x', cex=0.7, col="black")
}, col = rev(heat.colors(length(lv) - 1)), levels=lv)
#title(main=grupa)
dev.off()
pdf("mapaOdleglosciKolory.pdf",12,11)
par(mar=c(0,0,0,0))
filled.contour2(srednieCzasyLista$x, srednieCzasyLista$y, najblizszyLekarzOdlegloscMatrix, col = rev(heat.colors(length(lv) - 1)), levels=lv)
plot(d,col='white',add=TRUE)
plot(shape1, border="grey50", lwd=1, add=T)
plot(shape0, border="black", lwd=1, add=T)
points(wybraneDF[,2] + rnorm(nrow(wybraneDF))/30, wybraneDF[,3] + rnorm(nrow(wybraneDF))/30, pch='x', cex=0.7, col="#77777777")
points(wybraneDF2[,2] + rnorm(nrow(wybraneDF2))/30, wybraneDF2[,3] + rnorm(nrow(wybraneDF2))/30, pch='x', cex=0.7, col="black")
dev.off()
?get_map
library(maptools)
library(ggmap)
library(ggplot2)
library(mapproj)
location <- c(min(x), min(y), max(x), max(y))
?get_map
portland = get_map(location = location, source = "osm", color="bw")
?get_openstreetmap
portland = get_map(location = location, source = "google", color="bw")
ggmap(portland,darken = c(0.95, "white")) +theme_nothing()
ggmap(portland,darken = c(0.75, "white")) +theme_nothing()
ggmap(portland,darken = c(0.5, "white")) +theme_nothing()
?get_map
portland = get_map(location = location, source = "google", color="bw", maptype="terrain")
ggmap(portland,darken = c(0.5, "white")) +theme_nothing()
head(polskieMiasta)
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="black")
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="black", col="#ff0000aa")
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa")
head(najblizszyLekarz)
odcinki <- data.frame(x=polskieMiasta[,5], y=polskieMiasta[,4], xe=najblizszyLekarz[,2], ye = najblizszyLekarz[,1])
lekarz <- wybraneWspolrzedne[wybraneDane[,8] < 14,]
najblizszyLekarz <- t(apply(polskieMiasta[,c(4,5)], 1, function(x) {
ind <- which.min((lekarz[,1] - x[1])^2*2 + (lekarz[,2] - x[2])^2)
c(lekarz[ind,1], lekarz[ind,2])
}))
odcinki <- data.frame(x=polskieMiasta[,5], y=polskieMiasta[,4], xe=najblizszyLekarz[,2], ye = najblizszyLekarz[,1])
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)
portland = get_map(location = location, source = "stamen", color="bw")
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)
?get_map
portland = get_map(location = location, source = "cloudmade", color="bw")
portland = get_map(location = location, source = "stamen", color="bw", maptype="watercolor")
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)
dev.off()
dev.off()
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)
head(wybraneWspolrzedne[,4:5])
head(wybraneWspolrzedne)
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)+
geom_point(aes(y = dlugosc, x = szerokosc, data=wybraneWspolrzedne,
colour="#000000aa")
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)+
geom_point(aes(y = dlugosc, x = szerokosc), data=wybraneWspolrzedne,
colour="#000000aa")
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)+
geom_point(aes(y = szerokosc, x = dlugosc), data=wybraneWspolrzedne,
colour="#000000aa")
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)+
geom_point(aes(y = szerokosc, x = dlugosc), data=wybraneWspolrzedne,
colour="#000000aa", cex='x')
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)+
geom_point(aes(y = szerokosc, x = dlugosc), data=wybraneWspolrzedne,
colour="#000000aa", pch='x')
pdf("mapaTlo.pdf",12,11)
par(mar=c(0,0,0,0))
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)+
geom_point(aes(y = szerokosc, x = dlugosc), data=wybraneWspolrzedne,
colour="#000000aa", pch='x')
dev.off()
pdf("mapaTlo.pdf",12,11)
par(mar=c(0,0,0,0))
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() + xlim(range(x)) + ylim(range(y)) +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)+
geom_point(aes(y = szerokosc, x = dlugosc), data=wybraneWspolrzedne,
colour="#000000aa", pch='x')
dev.off()
portland = get_map(location = location, source = "google", color="bw", maptype="terrain")
pdf("mapaTlo.pdf",12,11)
par(mar=c(0,0,0,0))
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() + xlim(range(x)) + ylim(range(y)) +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)+
geom_point(aes(y = szerokosc, x = dlugosc), data=wybraneWspolrzedne,
colour="#000000aa", pch='x')
dev.off()
location <- c(20.7, 52.0, 21.4, 52.5)
odcinki <- data.frame(x=polskieMiasta[,5], y=polskieMiasta[,4], xe=najblizszyLekarz[,2], ye = najblizszyLekarz[,1])
portland = get_map(location = location, source = "google", color="bw", maptype="terrain")
pdf("mapaTlo.pdf",12,11)
par(mar=c(0,0,0,0))
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() + xlim(location[c(1,3)]) + ylim(location[c(2,4)]) +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)+
geom_point(aes(y = szerokosc, x = dlugosc), data=wybraneWspolrzedne,
colour="#000000aa", pch='x')
dev.off()
location <- c(18.5, 49.5, 19.5, 50.5)
portland = get_map(location = location, source = "google", color="bw", maptype="terrain")
pdf("mapaTlo.pdf",12,11)
par(mar=c(0,0,0,0))
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() + xlim(location[c(1,3)]) + ylim(location[c(2,4)]) +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)+
geom_point(aes(y = szerokosc, x = dlugosc), data=wybraneWspolrzedne,
colour="#000000aa", pch='x')
dev.off()
location <- c(18.2, 49.8, 19.7, 50.9)
portland = get_map(location = location, source = "google", color="bw", maptype="terrain")
par(mar=c(0,0,0,0))
ggmap(portland,darken = c(0.5, "white")) +theme_nothing() + xlim(location[c(1,3)]) + ylim(location[c(2,4)]) +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)+
geom_point(aes(y = szerokosc, x = dlugosc), data=wybraneWspolrzedne,
colour="#000000aa", pch='x')
pdf("mapaTlo.pdf",12,11)
ggmap(portland,darken = c(0.7, "white")) +theme_nothing() + xlim(location[c(1,3)]) + ylim(location[c(2,4)]) +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)+
geom_point(aes(y = szerokosc, x = dlugosc), data=wybraneWspolrzedne,
colour="#000000aa", pch='x')
dev.off()
pdf("mapaTlo.pdf",12,11)
ggmap(portland,darken = c(0.8, "white")) +theme_nothing() + xlim(location[c(1,3)]) + ylim(location[c(2,4)]) +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)+
geom_point(aes(y = szerokosc, x = dlugosc), data=wybraneWspolrzedne,
colour="#000000aa", pch='x')
dev.off()
pdf("mapaTlo.pdf",12,11)
ggmap(portland,darken = c(0.9, "white")) +theme_nothing() + xlim(location[c(1,3)]) + ylim(location[c(2,4)]) +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)+
geom_point(aes(y = szerokosc, x = dlugosc), data=wybraneWspolrzedne,
colour="#000000aa", pch='x')
dev.off()
portland = get_map(location = location, source = "google", color="bw", maptype="hybrid")
pdf("mapaTlo.pdf",12,11)
ggmap(portland,darken = c(0.9, "white")) +theme_nothing() + xlim(location[c(1,3)]) + ylim(location[c(2,4)]) +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)+
geom_point(aes(y = szerokosc, x = dlugosc), data=wybraneWspolrzedne,
colour="#000000aa", pch='x')
dev.off()
ggmap(portland,darken = c(0.95, "white"))
pdf("mapaTlo.pdf",12,11)
ggmap(portland,darken = c(0.95, "white")) +theme_nothing() + xlim(location[c(1,3)]) + ylim(location[c(2,4)]) +
geom_point(aes(y = lat, x = long, size=sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)+
geom_point(aes(y = szerokosc, x = dlugosc), data=wybraneWspolrzedne,
colour="#000000aa", pch='x')
dev.off()
portland = get_map(location = location, source = "google", color="bw", maptype="roadmap")
pdf("mapaTlo.pdf",12,11)
ggmap(portland,darken = c(0.95, "white")) +theme_nothing() + xlim(location[c(1,3)]) + ylim(location[c(2,4)]) +
geom_point(aes(y = lat, x = long, size=2*sqrt(pop/100000)), data=polskieMiasta,
colour="#ff0000aa") +
geom_segment(aes(x=x, xend=xe, y=y, yend=ye), data=odcinki)+
geom_point(aes(y = szerokosc, x = dlugosc), data=wybraneWspolrzedne,
colour="#000000aa", pch='x')
dev.off()
